<div class="container">
		<div class="row">
			<div class="twelve columns">
				<div class="logger-header">
					<h1>MongodbLogger Example</h1>
					<h4 class="subheader">
            It's Rails application with MongodbLogger gem. Here you can see how it woks and how you can use it.
					</h4>
				</div>
			</div>
		</div>
</div>

<div class="container">
		<div class="row">
			<div class="ten columns centered">
      	<div class="panel">
      		<h4>Web Panel of MongodbLogger</h4>
      		<p>Here you can see MongodbLogger Web panel. After each refresh of this page will be added new log record in MongoDB..</p>
      		<p>Login: <strong>demo</strong> Password: <strong>password</strong></p>
      		<p>
      		  <%=link_to "MongodbLogger Web", mongodb_url(user: 'demo', password: 'password'), :class => "nice radius green button mobile src-download" %>
      		</p>
      	</div>
      </div>
    </div>

    <div class="row">
			<div class="ten columns centered">
      	<div class="panel">
      		<h4>Additional Information in logs</h4>
      		<p>If you want to add extra information to the base of the document (let's say something like user_id on every request that it's available), you can just call the Rails.logger.add_metadata method on your logger.</p>
      		<p>
      		  <%=link_to "Log additional information", new_test_path, :class => "nice radius green button mobile src-download" %>
      		</p>
      		<p>After click on this button, in log will be added hash "{:string => "some_data", :integer => 1, :boolean => true}" by key "additional_data".</p>
      		<p>
      		  You can filter such data like this:
      		  <a href="/mongodb/overview?filter%5Bcontroller%5D=&filter%5Baction%5D=&filter%5Blimit%5D=100&filter%5Bapplication_name%5D=&filter%5Bip%5D=&filter%5Bmore%5D%5B%5D%5Btype%5D=boolean&filter%5Bmore%5D%5B%5D%5Bkey%5D=additional_data&filter%5Bmore%5D%5B%5D%5Bcondition%5D=exists&filter%5Bmore%5D%5B%5D%5Bvalue%5D=true&submit=Filter">Example 1</a>,
      		  <a href="/mongodb/overview?filter%5Bcontroller%5D=&filter%5Baction%5D=&filter%5Blimit%5D=100&filter%5Bapplication_name%5D=&filter%5Bip%5D=&filter%5Bmore%5D%5B%5D%5Btype%5D=string&filter%5Bmore%5D%5B%5D%5Bkey%5D=additional_data.string&filter%5Bmore%5D%5B%5D%5Bcondition%5D=equals&filter%5Bmore%5D%5B%5D%5Bvalue%5D=some_data&submit=Filter">Example 2</a>,
      		  <a href="/mongodb/overview?filter%5Bcontroller%5D=&filter%5Baction%5D=&filter%5Blimit%5D=100&filter%5Bapplication_name%5D=&filter%5Bip%5D=&filter%5Bmore%5D%5B%5D%5Btype%5D=integer&filter%5Bmore%5D%5B%5D%5Bkey%5D=additional_data.integer&filter%5Bmore%5D%5B%5D%5Bcondition%5D=equals&filter%5Bmore%5D%5B%5D%5Bvalue%5D=1&submit=Filter">Example 3</a>,
      		  <a href="/mongodb/overview?filter%5Bcontroller%5D=&filter%5Baction%5D=&filter%5Blimit%5D=100&filter%5Bapplication_name%5D=&filter%5Bip%5D=&filter%5Bmore%5D%5B%5D%5Btype%5D=boolean&filter%5Bmore%5D%5B%5D%5Bkey%5D=additional_data.boolean&filter%5Bmore%5D%5B%5D%5Bcondition%5D=equals&filter%5Bmore%5D%5B%5D%5Bvalue%5D=true&submit=Filter">Example 4</a>.
      		</p>
      	</div>
      </div>
    </div>

    <div class="row">
			<div class="ten columns centered">
      	<div class="panel">
      		<h4>Log Exceptions</h4>
      		<p>Here you can see how MongodbLogger log exceptions of Rails app.</p>
      		<p>
      		  <%=link_to "Log exceptions", exception_tests_path, :class => "nice radius green button mobile src-download" %>
      		</p>
      		<p>After click on this button you will see rails page with exception. All exceptions you can filter <a href="/mongodb/overview?filter%5Bcontroller%5D=&filter%5Baction%5D=&filter%5Blimit%5D=100&filter%5Bapplication_name%5D=&filter%5Bip%5D=&filter%5Bis_exception%5D=1&submit=Filter">like this</a>.</p>
      	</div>
      </div>
    </div>

    <div class="row">
			<div class="ten columns centered">
      	<div class="panel">
      		<h4>Log params</h4>
      		<p>Here you can see how MongodbLogger log request params.</p>
      		<p>
      		  <%= form_tag tests_path, :multipart => true do %>
              <input type="hidden" name="MAX_FILE_SIZE" value="512000" />
              <%= label_tag 'name', "Name" %>
              <%= text_field_tag 'name' %>
              <%= label_tag 'password', "Password" %>
              <%= password_field_tag 'password' %>
              <%= label_tag 'count', "Count"%>
              <%= select_tag "count", "<option>1</option><option>2</option><option>3</option><option>4</option>".html_safe %>
              <%= label_tag 'avatar', "Avatar" %>
              <%= file_field_tag 'avatar' %>
              <p><%= submit_tag "Submit form", :class => "nice radius green button mobile" %></p>
            <% end %>
      		</p>
      		<p>
      		  After submit this form you can look how MongoDB log this params.
      		  Password in filter_parameters, so it's will be filtered also in logs.
      		  Attachment will log like hash with "original_filename" and "content_type" keys.
      		</p>
      	</div>
      </div>
    </div>



    <footer class="row">
	    <section class="centered twelve columns">
	      <ul class="block-grid three-up">
	        <li><a href="http://mongodb-logger.catware.org">MongodbLogger</a></li>
	        <li><a href="https://github.com/le0pard/mongodb_logger">MongodbLogger sources</a></li>
	        <li><a href="https://github.com/le0pard/mongodb_logger_example_heroku">Sources of this application</a></li>
	      </ul>
	    </section>
    </footer>

</div>

